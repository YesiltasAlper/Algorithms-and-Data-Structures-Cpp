#include <iostream>

using namespace std;


void swap(int* arr1, int* arr2) {

    int temp = *arr1;
    *arr1 = *arr2;
    *arr2 = temp;
}


void SelectionSort(int* arr, int size) {

    for (int i = 0; i < (size - 1); i++) {

        int min_index = i;

        for (int j = (i + 1); j < (size); j++)
            if (arr[j] < arr[min_index])
                min_index = j;

        swap((arr + min_index), (arr + i));
    }
}


void printArray(int* arr, int size) {

    for (int i = 0; i < size; i++)
        cout << arr[i] << "    ";
    cout << endl;
}


int main() {

    int arr[] = { 56, 17, 4, 14, 3 };
    int size = sizeof(arr) / sizeof(arr[0]);

    cout << "*****Before Sorting*****" << endl;
    printArray(arr, size);

    cout << "*****After Sorting******" << endl;
    SelectionSort(arr, size);
    printArray(arr, size);
}


/*
i            min_index               j           if (arr[j] < arr[min_index])     new_min_index             swap                ilk durum (swap oncesi)        son durum (swap sonrasi)

***************************************************************************************************************************************************************************************

0                0                   1                 arr[1] < arr[0]                1                      -                    56  17   4   14  3                      -
0                1                   2                 arr[2] < arr[1]                2                      -                             -                              -
0                2                   3                 arr[3] < arr[2]                2                      -                             -                              -
0                2                   4                 arr[4] < arr[2]                4             swap(arr[4] , arr[0])                  -                     3   17   4   14  56
                                                                                                   arr[4] = 3   arr[0] = 56

***************************************************************************************************************************************************************************************

1                1                   2                 arr[2] < arr[1]                2                      -                    3   17   4   14  56                     -
1                2                   3                 arr[3] < arr[2]                2                      -                             -                              -
1                2                   4                 arr[4] < arr[2]                2             swap(arr[2] , arr[1])                  -                     3   4   17   14  56
                                                                                                   arr[2] = 4   arr[1] = 17

***************************************************************************************************************************************************************************************

2                2                   3                 arr[3] < arr[2]                3                      -                    3   4   17   14  56                     -
2                3                   4                 arr[4] < arr[3]                3             swap(arr[3] , arr[2])                  -                     3   4   14   17  56
                                                                                                   arr[3] = 14   arr[2] = 17

***************************************************************************************************************************************************************************************

3                3                   4                 arr[4] < arr[3]                3             swap(arr[3] , arr[3])         3   4   14   17  56            3   4   14   17  56
                                                                                                   arr[3] = 17   arr[3] = 17

***************************************************************************************************************************************************************************************
*/
